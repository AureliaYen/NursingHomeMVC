@section Styles
	{
	<link rel="stylesheet" href="/css/ShowAllData.css" />
	<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

	<style>
		p {
			margin: 0;
			font-size: 20px;
		}
	</style>
}
<div id="tabs" class="formContainerSAD">
	<ul>
		<li><a href="#tabs-1">基本資料</a></li>
		<li><a href="#tabs-2">每日記錄</a></li>

	</ul>
	<div id="tabs-1">
		<div class="containerTAB">
			<div class="updateTime">
				<p class="control-label">更新日期: </p>
				<p class="updateTimetext control-label" id="patientUpdateTime">yyyy/mm/dd</p>
			</div>
			<div class="item">
				<div class="itemBasic">
					<div class="itemBasicLeft">
						<div>
							<div class="itemDetail">
								<p class="control-label">姓名/床號:</p>
								<p id="patientName" class="control-label">123</p>
							</div>
							<div class="itemDetail">
								<p class="control-label">年齡:</p>
								<p id="age" class="control-label"></p>
							</div>
						</div>
						<div>
							<div class="itemDetail">
								<p class="control-label">負責護理師:</p>
								<p id="nurseName" class="control-label"></p>
							</div>
							<div class="itemDetail">
								<p class="control-label">下次回診日期:</p>
								<p id="dateToHospital" class="control-label"></p>
							</div>
						</div>
						<div>
							<div class="itemDetail">
								<p class="control-label">入住日期:</p>
								<p id="checkInDate" class="control-label"></p>
							</div>
							<div class="itemDetail">
								<p class="control-label">預計退房時間:</p>
								<p id="outDate" class="control-label"></p>
							</div>
						</div>
					</div>
					<div class="itemBasicRight">
						<img src="" alt="住民照片" srcset="" id="patientPic">
					</div>
				</div>
				<div class="diagnosis">
					<p class="control-label">醫師診斷內容:</p>
					<p id="patientContent" class="diagnosisP control-label"></p>
				</div>
				<div class="medicine">
					<div class="medLeft">
						<p class="control-label">主訴:</p>
						<p id="patientReport" class="control-label"></p>
					</div>
					<div class="medRight">
						<p class="control-label">用藥:</p>
						<p id="patientMedicine" class="control-label"></p>
					</div>
				</div>
				<div class="history">
					<p class="control-label">病史:</p>
					<p id="patientHistory" class="historyP control-label"></p>
				</div>
			</div>
		</div>
	</div>

	<div id="tabs-2" class="dataChart">
		<div>
			<canvas id="myChartTemp"></canvas>
			<p id="tempWarn"></p>
		</div>
		<div>
			<canvas id="myChartPressure"></canvas>
			<p id="pressureWarn"></p>
		</div>

		<div>
			<canvas id="myChartPluse"></canvas>
			<p id="pluseWarn"></p>
		</div>
		<div>
			<canvas id="myChartBreathe"></canvas>
			<p id="breatheWarn"></p>
		</div>
	</div>
</div>
<div class="logoutbtn">
	<button class="btn btn-outline-secondary" id="oout">登出</button>
</div>

@section Scripts{
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
	<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		$(function () {		
			$('#tabs').tabs();
			let name = localStorage.getItem('patientName');
			showData(name)
			getNursingRevordData(name)
			setTimeout(chartJsTemp, 1000);
			setTimeout(chartJsPressure, 1000);
			setTimeout(chartJsPluse, 1000);
			setTimeout(chartJsBreathe, 1000);
		});

		let xaxis = [];
		let dataTemp = [];
		let dataLabel = [];
		let dataSystolicPressure = [];
		let dataDiastolicPressure = [];
		let dataPulse = [];
		let dataBreathe = [];
		let dataOther = [];
		let tempCount = 0;
		let tempPressure = 0;
		let tempPluse = 0;
		let tempBreathe = 0;

		function getNursingRevordData(patientName) {
			const webApiBaseAddress = 'https://localhost:7171';
			fetch(`${webApiBaseAddress}/api/Frontend/GetRecord/${patientName}`, {
				method: "GET",
			}).then(result => {
				if (result.ok) {
					return result.json();
				}
			}).then(data => {
				ans = JSON.stringify(data);
				for (let i = 0; i < data.length; i++) {
					if (data[i].n體溫 >= 38) {
						tempCount++;
					}
					dataTemp.push(data[i].n體溫);
					dataLabel.push(data[i].n紀錄時間.slice(5, 9));

					if (data[i].n收縮壓 > 120 || data[i].n舒張壓 >= 90) {
						tempPressure++;
					}
					dataSystolicPressure.push(data[i].n收縮壓);
					dataDiastolicPressure.push(data[i].n舒張壓);

					if (data[i].n脈搏 < 60 || data[i].n脈搏 >= 100) {
						tempPluse++;
					}
					dataPulse.push(data[i].n脈搏);
					if (data[i].n呼吸 < 12 || data[i].n呼吸 > 18) {
						tempBreathe++;
					}
					dataBreathe.push(data[i].n呼吸);
					dataOther.push(data[i].n其他);

				}
				console.log(dataTemp);
				console.log(dataLabel);;
			}).catch(err => {
				alert(err);
			});
		}

		function chartJsTemp() {
			const ctx = document.getElementById('myChartTemp');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: dataLabel,
					datasets: [{
						label: 'Temp',
						data: dataTemp,
						borderColor: "red",
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						title: {
							display: true,
							text: '每月體溫量測記錄',
							color: 'red',
							font: {
								size: 25,
								family: 'tahoma',
								weight: 'normal',
								style: 'italic'
							},

						}
					},

					scales: {
						x: {
							display: true,
							title: {
								display: true,
								text: '日期',
								color: '#911',
								font: {
									family: 'Comic Sans MS',
									size: 20,
									weight: 'bold',
									lineHeight: 1.2,
								},
								padding: { top: 20, left: 0, right: 0, bottom: 0 }
							}
						},
						y: {
							min: 35,
							max: 42,
							ticks: {
								stepSize: 0.5
							},
							beginAtZero: false,
							display: true,
							title: {
								display: true,
								text: '體溫',
								color: '#191',
								font: {
									family: 'Times',
									size: 20,
									style: 'normal',
									lineHeight: 1.2
								},
								padding: { top: 30, left: 0, right: 0, bottom: 0 },
							}
						}
					}
				}
			})
			if (tempCount > 0) {
				$('#tempWarn').text(`共${tempCount}天溫度超過標準`);
			} else {
				$('#tempWarn').text('體溫無異常');
			}
		}

		function chartJsPressure() {
			const ctx = document.getElementById('myChartPressure');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: dataLabel,
					datasets: [{
						label: '收縮壓',
						data: dataSystolicPressure,
						borderColor: "red",
						borderWidth: 1
					},
					{
						label: '舒張壓',
						data: dataDiastolicPressure,
						borderColor: "#000000",
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						title: {
							display: true,
							text: '每月血壓量測記錄',
							color: 'red',
							font: {
								size: 25,
								family: 'tahoma',
								weight: 'normal',
								style: 'italic'
							},

						}
					},

					scales: {
						x: {
							display: true,
							title: {
								display: true,
								text: '日期',
								color: '#911',
								font: {
									family: 'Comic Sans MS',
									size: 20,
									weight: 'bold',
									lineHeight: 1.2,
								},
								padding: { top: 20, left: 0, right: 0, bottom: 0 }
							}
						},
						y: {
							min: 50,
							max: 150,
							ticks: {
								stepSize: 10
							},
							beginAtZero: false,
							display: true,
							title: {
								display: true,
								text: '血壓',
								color: '#191',
								font: {
									family: 'Times',
									size: 20,
									style: 'normal',
									lineHeight: 1.2
								},
								padding: { top: 30, left: 0, right: 0, bottom: 0 },
							}
						}
					}
				}
			})
			if (tempPressure > 0) {
				$('#pressureWarn').text(`共${tempPressure}天血壓超過標準`);
			} else {
				$('#pressureWarn').text('血壓無異常');
			}
		}

		function chartJsPluse() {
			const ctx = document.getElementById('myChartPluse');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: dataLabel,
					datasets: [{
						label: '脈搏',
						data: dataPulse,
						borderColor: "red",
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						title: {
							display: true,
							text: '每月脈搏量測記錄',
							color: 'red',
							font: {
								size: 25,
								family: 'tahoma',
								weight: 'normal',
								style: 'italic'
							},
						}
					},
					scales: {
						x: {
							display: true,
							title: {
								display: true,
								text: '日期',
								color: '#911',
								font: {
									family: 'Comic Sans MS',
									size: 20,
									weight: 'bold',
									lineHeight: 1.2,
								},
								padding: { top: 20, left: 0, right: 0, bottom: 0 }
							}
						},
						y: {
							min: 50,
							max: 110,
							ticks: {
								stepSize: 15
							},
							beginAtZero: false,
							display: true,
							title: {
								display: true,
								text: '次數',
								color: '#191',
								font: {
									family: 'Times',
									size: 20,
									style: 'normal',
									lineHeight: 1.2
								},
								padding: { top: 30, left: 0, right: 0, bottom: 0 },
							}
						}
					}
				}
			})
			if (tempPluse > 0) {
				$('#pluseWarn').text(`共${tempPluse}天脈搏超過標準`);
			} else {
				$('#pluseWarn').text('脈搏無異常');
			}
		}

		function chartJsBreathe() {
			const ctx = document.getElementById('myChartBreathe');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: dataLabel,
					datasets: [{
						label: '呼吸',
						data: dataBreathe,
						borderColor: "red",
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						title: {
							display: true,
							text: '每月呼吸量測記錄',
							color: 'red',
							font: {
								size: 25,
								family: 'tahoma',
								weight: 'normal',
								style: 'italic'
							},
						}
					},
					scales: {
						x: {
							display: true,
							title: {
								display: true,
								text: '日期',
								color: '#911',
								font: {
									family: 'Comic Sans MS',
									size: 20,
									weight: 'bold',
									lineHeight: 1.2,
								},
								padding: { top: 20, left: 0, right: 0, bottom: 0 }
							}
						},
						y: {
							min: 10,
							max: 25,
							ticks: {
								stepSize: 3
							},
							beginAtZero: false,
							display: true,
							title: {
								display: true,
								text: '次數',
								color: '#191',
								font: {
									family: 'Times',
									size: 20,
									style: 'normal',
									lineHeight: 1.2
								},
								padding: { top: 30, left: 0, right: 0, bottom: 0 },
							}
						}
					}
				}
			})
			if (tempBreathe > 0) {
				$('#breatheWarn').text(`共${tempBreathe}天呼吸超過標準`);
			} else {
				$('#breatheWarn').text('呼吸無異常');
			}
		}
		$("#oout").click(function (event) {
			localStorage.removeItem('patientName')
			window.location.assign("/Home/Index");
		});

		function showData(patientName) {
			const webApiAress = 'https://localhost:7171';
			fetch(`${webApiAress}/api/Frontend/GetData/${patientName}`, {
				method: 'GET',
			}).then(result => {
				if (result.ok) {
					return result.json();
				}
			}).then(data => {
				console.log(1);
				console.log(data);
				$('#patientName').text(data[0].da住民姓名)
				$('#nurseName').text(data[0].da負責員工姓名)
				let time = data[0].da住民入住時間.slice(0, 10)
				$('#checkInDate').text(time)
				$('#age').text(data[0].da住民年齡)
				let time2 = data[0].da住民回診日期.slice(0, 10)
				$('#dateToHospital').text(time2)
				let time3 = data[0].da住民預計退房時間.slice(0, 10)
				$('#outDate').text(time3)
				let time4 = data[0].da更新.slice(0, 10)
				$('#patientUpdateTime').text(time4)
				$('#patientPic').attr('src', `https://localhost:7105/images/PatientImages/${data[0].da住民照片}`);
				$('#patientContent').text(data[0].da住民醫師診斷)
				$('#patientReport').text(data[0].da住民主訴)
				$('#patientMedicine').text(data[0].da住民指示與用藥)
				$('#patientHistory').text(data[0].da住民現在病史)
			}).catch(err => {
				alert(err);
			});
		}
	</script>
}